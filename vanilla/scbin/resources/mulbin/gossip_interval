#!/usr/bin/env python

import sys
from datetime import *

import pyutil

if len(sys.argv) != 4:
  print 'usage: gossip_interval.py <logdir> <observer> <observed_node>'
  print 'example: phi_distribute.py n 3 4'
  exit(0)
  
logdir = sys.argv[1]
observer = int(sys.argv[2])
observed_node = int(sys.argv[3])

pyutil.read_machinelist(logdir)
num_mach = pyutil.num_mach
num_ins = pyutil.num_ins
observer_ip = pyutil.nid2ip[observer]
observed_node_ip = pyutil.nid2ip[observed_node]

mach, ins = pyutil.nid2ind[observer]
logfile = open('%s/node%d/scale%d.log' % (logdir, mach, ins))
recline = 'receive info of /' + observed_node_ip + ' '
rectimehist = []
for logline in logfile:
  if recline in logline:
    entries = logline.split()
    time = (entries[2] + ' ' + entries[3]).split(',')[0]
    timestamp = datetime.strptime(time, '%Y-%m-%d %X')
    rectimehist.append(timestamp)
if not rectimehist:
  print 'Not see any gossip of', observed_node
  exit(0)
firsttime = rectimehist[0]
firstminhist = []
for rectime in rectimehist:
  if (rectime - firsttime).total_seconds() > 60:
    break
  firstminhist.append(rectime)
recinthist = []
prevrec = firstminhist[0]
for rectime in firstminhist[1:]:
  recinthist.append((rectime - prevrec).total_seconds())
  prevrec = rectime
recinthist.sort()
datasize = len(recinthist)
lqpos = datasize / 4
meanpos = datasize / 2
uqpos = lqpos * 3
print 'datasize=%d min=%f lq=%f mean=%f uq=%f max=%f' % \
    (datasize, recinthist[0], recinthist[lqpos], recinthist[meanpos], recinthist[uqpos], recinthist[-1])

