#!/bin/sh

if [ $# -ne 2 ] ; then
  echo "usage: param_analysis <expdir> <observed_node_group>" 
  exit 1
fi

expdir=$1
observed_node_group=`echo $2 | sed 's/,/ /g'`
output=$expdir/output
mkdir -p $output
for i in 32 64 128; do
  logdir=$expdir/n$i
  all_max_phi $logdir > $output/all_max_phi_$i
  maxphi=0
  for node in $observed_node_group; do
    maxline=`grep "^$node " $output/all_max_phi_$i`
    phi=`echo $maxline | awk '{print $6}'`
    if [ `echo "$phi > $maxphi" | bc` -eq 1 ]; then
      maxphi=$phi
      observer=`echo $maxline | awk '{print $8}'`
      observed_node=$node
    fi
  done
  max_phi $logdir $observer $observed_node > $output/max_phi_$i
  phi_distribute $logdir $observer $observed_node > $output/phi_distribute_$i
  num_false_detect $logdir > $output/num_false_detect_$i
  num_false_detect_node $logdir > $output/num_false_detect_node_$i
  num_false_detected_node $logdir $observed_node > $output/num_false_detected_node_$i
  exec_time $logdir > $output/exec_time_$i
  node_exec_time $logdir $observed_node > $output/node_exec_time_$i
  time2stable $logdir > $output/time2stable_$i
  acc_downtime $logdir > $output/acc_downtime_$i
  gossip_interval $logdir $observer $observed_node 60 > $output/gossip_interval_$i
  gossip_mean $logdir $observer $observed_node 60 > $output/gossip_mean_$i
  propagate $logdir $observer $observed_node 60 > $output/propagate_$i
  #general_receive_token $logdir > $output/all_receive_token_$i
  #general_receive_token $logdir $observer > $output/receive_token_$i
  #obs_receiving_token $logdir $observed_node > $output/all_receiving_token_$i
  #obs_receiving_token $logdir $observed_node $observer > $output/receiving_token_$i
done
